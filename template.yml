AWSTemplateFormatVersion : '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless Signup

Globals:
  Api:
    Cors:
      AllowHeaders: "'x-requested-with'"
      AllowOrigin: "'http://serverless-signup.s3-website-eu-west-1.amazonaws.com'"

Resources:

  SignUpFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: app  # where the source code is (folder)
      Handler: index.lambdaHandler  # where the source code is (file + function)
      Runtime: nodejs8.10
      Timeout: 10  # in seconds
      MemorySize: 1024  # in MB
      Environment:
        Variables:
          STARTUP_SIGNUP_TABLE: !Ref StartupSignupsTable
          NEW_SIGNUP_TOPIC: !Ref NewSignupTopic
      Events:
        PostAPI:
          Type: Api
          Properties:
            Path: /signup
            Method: post
      Policies:
        - AWSLambdaExecute  # basic permissions

        # DynamoDB Write permissions
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource: !GetAtt StartupSignupsTable.Arn

        # SNS Publish permissions
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - sns:Publish
              Resource: !Ref NewSignupTopic
    
  StartupSignupsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: email
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  NewSignupQueue: 
    Type: AWS::SQS::Queue

  NewSignupTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
      - Endpoint: your-email@test.com  # this could be a Stack Parameter
        Protocol: email
      - Endpoint: !GetAtt NewSignupQueue.Arn
        Protocol: sqs

  # this policy is needed so that SNS can send messages into SQS
  AllowSNS2SQSPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Id: PublicationPolicy
        Statement:
        - Action: ['sqs:SendMessage']
          Condition:
            ArnEquals:
              aws:SourceArn: !Ref NewSignupTopic
          Effect: Allow
          Principal: {AWS: '*'}
          Resource: !GetAtt NewSignupQueue.Arn
          Sid: Allow-SNS-SendMessage
        Version: '2008-10-17'
      Queues:
      - !Ref NewSignupQueue

Outputs:
  Endpoint:
    Value: !Join ["", [
      "https://",
      !Ref ServerlessRestApi,
      ".execute-api.",
      !Ref "AWS::Region",
      ".amazonaws.com/",
      !Ref ServerlessRestApiProdStage
    ]]